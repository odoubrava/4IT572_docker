name: Build and tests eshop

on:
  workflow_dispatch:
  push:

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: node_modules-${{hashFiles('**/package-lock.json')}}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: node_modules-${{hashFiles('**/package-lock.json')}}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{github.ref == 'refs/heads/master'}}
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{runner.os}}-build-${{github.run_id}}
          restore-keys: ${{runner.os}}-build-${{github.run_id}}


  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v3.3.2
        with:
          path: node_modules
          key: node_modules-${{hashFiles('**/package-lock.json')}}

      - name: Run tests
        run: |
          npm run test -- --colors

  Deploy:
    needs: [Build, Test]
    if: ${{github.ref == 'refs/heads/master'}}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './ansible'

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup Python
        uses: actions/setup-python@v5.0.0  
        with:
          python-version: '3.11'
       
      - name: Install Ansible
        run: pip3 install ansible boto boto3

      - name: Upload secrets
        run: |
          echo "${{secrets.AWS_TOKEN}}" > test.pem
          echo "${{secrets.ANSIBLE_VAULT_PASS}}" > .vault_pass

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          #ACCESS_KEY: ${{secrets.ACCESS_KEY}}
          #SECRET_KEY: ${{secrets.SECRET_KEY}}
          #SESSION_TOKEN: ${{secrets.SESSION_TOKEN}}
          #SSH_PRIVATE_KEY: ${{secrets.AWS_TOKEN}}
        run: |
          chmod 400 test.pem
          ansible-playbook ec2_deploy.yml --vault-pass-file .vault_pass --user ec2-user --key-file test.pem